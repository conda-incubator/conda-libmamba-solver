name: CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - "docs/**"
  pull_request:
    paths-ignore:
      - "docs/**"

jobs:
  linux:
    name: Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9"]

    env:
      OS: "linux"
      PYTHON: ${{ matrix.python-version }}

    steps:
      - name: Checkout our source
        uses: actions/checkout@v2
        with:
          path: conda-libmamba-solver
          fetch-depth: 0

      - name: Checkout conda
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          repository: conda/conda
          ref: libmamba-migration
          path: conda

      - name: Merge repositories
        run: mv conda-libmamba-solver conda/

      - name: Python ${{ matrix.python-version }}
        working-directory: conda
        run: >
          docker run
          --rm -v ${PWD}:/opt/conda-src
          -e TEST_SPLITS
          -e TEST_GROUP
          -e CONDA_SOLVER_LOGIC
          ghcr.io/conda/conda-ci:poc-libsolv-linux-python${{ matrix.python-version }}-mamba
          bash -c "/opt/conda/bin/python -m pip install /opt/conda-src/conda-libmamba-solver --no-deps -vvv &&
                   source /opt/conda-src/dev/linux/bashrc.sh &&
                   /opt/conda/bin/python -m pytest /opt/conda-src/conda-libmamba-solver/ -vv"

  macos:
    name: Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9"]

    env:
      OS: "macos"
      PYTHON: ${{ matrix.python-version }}

    steps:
      - name: Checkout our source
        uses: actions/checkout@v2
        with:
          path: conda-libmamba-solver
          fetch-depth: 0

      - name: Checkout conda
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          repository: conda/conda
          ref: libmamba-migration
          path: conda

      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: conda-test-env
          miniconda-version: "latest"
          python-version: ${{ matrix.python-version }}
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!

      - name: Setup environment
        shell: bash -l {0}
        working-directory: conda
        run: |
          # restoring the default for changeps1 to have parity with dev
          conda config --set changeps1 true
          # make sure the caching works correctly
          conda config --set use_only_tar_bz2 true
          # install all test requirements
          conda install --name conda-test-env --yes --file tests/requirements.txt
          conda update openssl ca-certificates certifi

      - name: Python ${{ matrix.python-version }}
        shell: bash -l {0}
        working-directory: conda
        run: |
          set -euxo pipefail
          eval "$(sudo python -m conda init bash --dev)"
          conda info
          mamba --version
          python -m pytest ..\conda-libmamba-solver -vv

  windows:
    name: Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9"]

    env:
      OS: "windows"
      PYTHON: ${{ matrix.python-version }}

    steps:
      - name: Checkout our source
        uses: actions/checkout@v2
        with:
          path: conda-libmamba-solver
          fetch-depth: 0

      - name: Checkout conda
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          repository: conda/conda
          ref: libmamba-migration
          path: conda

      - name: Set temp dirs correctly
        # https://github.com/actions/virtual-environments/issues/712
        run: |
          echo "TMPDIR=$env:USERPROFILE\AppData\Local\Temp" >> $env:GITHUB_ENV
          echo "TEMP=$env:USERPROFILE\AppData\Local\Temp" >> $env:GITHUB_ENV
          echo "TMP=$env:USERPROFILE\AppData\Local\Temp" >> $env:GITHUB_ENV

      - name: Setup environment
        shell: cmd
        working-directory: conda
        run: |
          CALL .\dev\windows\setup.bat
          if errorlevel 1 exit 1
          CALL dev-init.bat
          if errorlevel 1 exit 1
          python -m pip install --no-deps -vv ..\conda-libmamba-solver
          if errorlevel 1 exit 1

      - name: Python ${{ matrix.python-version }}
        shell: cmd
        working-directory: conda
        run: |
          CALL dev-init.bat
          if errorlevel 1 exit 1
          CALL conda info
          if errorlevel 1 exit 1
          CALL mamba --version
          if errorlevel 1 exit 1
          python -m pytest ..\conda-libmamba-solver -vv
          if errorlevel 1 exit 1
