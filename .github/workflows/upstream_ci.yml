name: Upstream

on:
  push:
    branches:
      - main
    paths-ignore:
      - "docs/**"
  pull_request:
    paths-ignore:
      - "docs/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  linux:
    name: Linux, Python ${{ matrix.python-version }}, ${{ matrix.test-type }}, group ${{ matrix.test-group }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9"]
        test-group: ["1", "2", "3"]
        test-splits: ["3"]
        test-type: ["integration"]
        include:
          - python-version: "3.7"
            test-type: "unit"
            test-group: "1"
          - python-version: "3.8"
            test-type: "unit"
            test-group: "1"
          - python-version: "3.9"
            test-type: "unit"
            test-group: "1"

    env:
      OS: "linux"
      PYTHON: ${{ matrix.python-version }}
      TEST_SPLITS: ${{ matrix.test-splits }}
      TEST_GROUP: ${{ matrix.test-group }}
      CONDA_EXPERIMENTAL_SOLVER: "libmamba"

    steps:
      - name: Checkout our source
        uses: actions/checkout@v2
        with:
          path: conda-libmamba-solver
          fetch-depth: 0

      - name: Checkout conda
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          repository: conda/conda
          ref: libmamba
          path: conda

      - name: Define test type and override pytest settings
        run: |
          if [[ ${{ matrix.test-type }} == "integration" ]]; then
            run_test_cmd="source /opt/conda-src/dev/linux/integration.sh"
          else
            run_test_cmd="source /opt/conda-libmamba-solver-src/dev/upstream_unit_tests_linux.sh"
          fi
          echo "run_test_cmd=${run_test_cmd}" >> $GITHUB_ENV

          # override pytest settings
          cp conda-libmamba-solver/pyproject.toml conda/pyproject.toml
          rm conda/setup.cfg

      - name: Python ${{ matrix.python-version }} ${{ matrix.test-type }} tests, group ${{ matrix.test-group }}
        working-directory: conda
        run: >
          docker run
          --rm
          -v ${GITHUB_WORKSPACE}/conda:/opt/conda-src
          -v ${GITHUB_WORKSPACE}/conda-libmamba-solver:/opt/conda-libmamba-solver-src
          -e TEST_SPLITS
          -e TEST_GROUP
          -e CONDA_EXPERIMENTAL_SOLVER
          ghcr.io/conda/conda-ci:libmamba-linux-python${{ matrix.python-version }}
          bash -c "/opt/conda/condabin/conda install -p /opt/conda 'conda-forge::mamba>=0.19.0' conda-forge::libcurl &&
                   /opt/conda/bin/python -m pip install /opt/conda-libmamba-solver-src --no-deps -vvv &&
                   $run_test_cmd"

  macos:
    name: MacOS, Python ${{ matrix.python-version }}, ${{ matrix.conda-solver-logic }}, ${{ matrix.test-type }}, group ${{ matrix.test-group }}
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9"]
        test-group: ["1", "2", "3"]
        test-splits: ["3"]
        test-type: ["integration"]
        include:
          - python-version: "3.7"
            test-type: "unit"
            test-group: "1"
          - python-version: "3.8"
            test-type: "unit"
            test-group: "1"
          - python-version: "3.9"
            test-type: "unit"
            test-group: "1"

    env:
      OS: "macos"
      PYTHON: ${{ matrix.python-version }}
      TEST_SPLITS: ${{ matrix.test-splits }}
      TEST_GROUP: ${{ matrix.test-group }}
      CONDA_EXPERIMENTAL_SOLVER: libmamba

    steps:
      - name: Checkout our source
        uses: actions/checkout@v2
        with:
          path: conda-libmamba-solver
          fetch-depth: 0

      - name: Checkout conda
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          repository: conda/conda
          ref: libmamba
          path: conda

      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: conda-test-env
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!

      - name: Setup environment
        shell: bash -l {0}
        working-directory: conda
        run: |
          set -euxo pipefail
          # restoring the default for changeps1 to have parity with dev
          conda config --set changeps1 true
          # make sure the caching works correctly
          conda config --set use_only_tar_bz2 true
          # add mamba to requirements
          echo "conda-forge::mamba >=0.19.0" >> tests/requirements.txt
          echo "conda-forge::libcurl" >> tests/requirements.txt
          # install all test requirements
          conda install --yes --file tests/requirements.txt python=${{ matrix.python-version }}
          conda update openssl ca-certificates certifi
          conda info
          mamba --version

      - name: Install conda-libmamba-solver
        shell: bash -l {0}
        working-directory: conda-libmamba-solver
        run: |
          python -m pip install . -vv --no-deps

      - name: Python ${{ matrix.python-version }} ${{ matrix.test-type }} tests, group ${{ matrix.test-group }}
        shell: bash -l {0}
        working-directory: conda
        if: matrix.test-type == 'integration'
        run: |
          # override pytest settings
          cp ../conda-libmamba-solver/pyproject.toml ./pyproject.toml
          rm ./setup.cfg
          # run test
          ./dev/macos/integration.sh

      - name: Python ${{ matrix.python-version }} ${{ matrix.test-type }} tests
        shell: bash -l {0}
        working-directory: conda
        if: matrix.test-type == 'unit'
        run: |
          # override pytest settings
          cp ../conda-libmamba-solver/pyproject.toml ./pyproject.toml
          rm ./setup.cfg
          # run test
          ../conda-libmamba-solver/dev/upstream_unit_tests_macos.sh

  windows:
    name: Windows, Python ${{ matrix.python-version }}, ${{ matrix.conda-solver-logic }}, ${{ matrix.test-type }}, group ${{ matrix.test-group }}
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9"]
        test-group: ["1", "2", "3"]
        test-splits: ["3"]
        test-type: ["integration"]
        include:
          - python-version: "3.7"
            test-type: "unit"
            test-group: "1"
          - python-version: "3.8"
            test-type: "unit"
            test-group: "1"
          - python-version: "3.9"
            test-type: "unit"
            test-group: "1"

    env:
      OS: "windows"
      PYTHON: ${{ matrix.python-version }}
      TEST_SPLITS: ${{ matrix.test-splits }}
      TEST_GROUP: ${{ matrix.test-group }}
      CONDA_EXPERIMENTAL_SOLVER: libmamba

    steps:
      - name: Checkout our source
        uses: actions/checkout@v2
        with:
          path: conda-libmamba-solver
          fetch-depth: 0

      - name: Checkout conda
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          repository: conda/conda
          ref: libmamba
          path: conda

      - name: Set temp dirs correctly
        # https://github.com/actions/virtual-environments/issues/712
        run: |
          echo "TMPDIR=$env:USERPROFILE\AppData\Local\Temp" >> $env:GITHUB_ENV
          echo "TEMP=$env:USERPROFILE\AppData\Local\Temp" >> $env:GITHUB_ENV
          echo "TMP=$env:USERPROFILE\AppData\Local\Temp" >> $env:GITHUB_ENV

      - name: Setup environment
        shell: cmd
        working-directory: conda
        run: |
          :: add mamba to requirements
          set "GT=^>="
          echo conda-forge::mamba %GT%0.19.0 >> .\tests\requirements.txt
          echo conda-forge::libcurl >> .\tests\requirements.txt
          :: initialize conda dev
          call .\dev\windows\setup.bat
          if errorlevel 1 exit 1
          call .\dev-init.bat
          if errorlevel 1 exit 1
          mamba --version
          if errorlevel 1 exit 1
          conda info -a
          if errorlevel 1 exit 1

      - name: Install conda-libmamba-solver
        shell: cmd
        working-directory: conda
        run: |
          call .\dev-init.bat
          if errorlevel 1 exit 1
          python -m pip install --no-deps -vv "%GITHUB_WORKSPACE%\conda-libmamba-solver"
          if errorlevel 1 exit 1

      - name: Python ${{ matrix.python-version }}, ${{ matrix.test-type }} tests, group ${{ matrix.test-group }}
        shell: cmd
        working-directory: conda
        if: matrix.test-type == 'integration'
        run: |
          :: override pytest settings
          copy ..\conda-libmamba-solver\pyproject.toml .\pyproject.toml
          del .\setup.cfg
          :: run test
          call .\dev\windows\${{ matrix.test-type }}.bat

      - name: Python ${{ matrix.python-version }}, ${{ matrix.test-type }} tests
        shell: cmd
        working-directory: conda
        if: matrix.test-type == 'unit'
        run: |
          :: override pytest settings
          copy ..\conda-libmamba-solver\pyproject.toml .\pyproject.toml
          del .\setup.cfg
          :: run test
          call ..\conda-libmamba-solver\dev\upstream_unit_tests_win.bat
